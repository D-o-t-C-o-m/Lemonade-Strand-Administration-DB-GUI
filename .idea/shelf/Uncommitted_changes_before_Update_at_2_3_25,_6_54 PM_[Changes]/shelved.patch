Index: src/main/java/org/mike/DatabaseConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.mike;\n\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.Properties;\n\npublic class DatabaseConfig {\n\nprivate static final Properties properties = new Properties();\n\nstatic {\n\ttry (InputStream input = DatabaseConfig.class.getClassLoader().getResourceAsStream(\"src/config.properties\")) {\n\t\tif (input == null) {\n\t\t\tSystem.out.println(\"Sorry, unable to find config.properties\");\n\t\t\tSystem.exit(1);\n\t\t}\n\n\t\t// Load the properties file\n\t\tproperties.load(input);\n\t} catch (IOException e) {\n\t\te.printStackTrace();\n\t}\n}\n\npublic static String getDbUrl() {\n\treturn properties.getProperty(\"db.url\");\n}\n\npublic static String getDbUsername() {\n\treturn properties.getProperty(\"db.username\");\n}\n\npublic static String getDbPassword() {\n\treturn properties.getProperty(\"db.password\");\n}\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/mike/DatabaseConfig.java b/src/main/java/org/mike/DatabaseConfig.java
--- a/src/main/java/org/mike/DatabaseConfig.java	(revision 4bea7692c5d17288bfa8975d43f541999a03cdcf)
+++ b/src/main/java/org/mike/DatabaseConfig.java	(date 1738531029387)
@@ -9,7 +9,7 @@
 private static final Properties properties = new Properties();
 
 static {
-	try (InputStream input = DatabaseConfig.class.getClassLoader().getResourceAsStream("src/config.properties")) {
+	try (InputStream input = DatabaseConfig.class.getClassLoader().getResourceAsStream("config.properties")) {
 		if (input == null) {
 			System.out.println("Sorry, unable to find config.properties");
 			System.exit(1);
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>target/\n!.mvn/wrapper/maven-wrapper.jar\n!**/src/MainTest/**/target/\n!**/src/test/**/target/\n\n### IntelliJ IDEA ###\n.idea/modules.xml\n.idea/jarRepositories.xml\n.idea/compiler.xml\n.idea/libraries/\n*.iws\n*.iml\n*.ipr\n\n### Eclipse ###\n.apt_generated\n.classpath\n.factorypath\n.project\n.settings\n.springBeans\n.sts4-cache\n\n### NetBeans ###\n/nbproject/private/\n/nbbuild/\n/dist/\n/nbdist/\n/.nb-gradle/\nbuild/\n!**/src/MainTest/**/build/\n!**/src/test/**/build/\n\n### VS Code ###\n.vscode/\n\n### Mac OS ###\n.DS_Store\n/config.properties\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
--- a/.gitignore	(revision 4bea7692c5d17288bfa8975d43f541999a03cdcf)
+++ b/.gitignore	(date 1738531011897)
@@ -36,4 +36,4 @@
 
 ### Mac OS ###
 .DS_Store
-/config.properties
+/src/main/resources/config.properties
Index: src/main/java/org/mike/userinterface/GraphicalUI.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.mike.userinterface;\n\nimport org.mike.service.OrderService;\nimport java.util.Scanner;\nimport javax.swing.*;\nimport java.awt.*;\nimport javax.swing.ImageIcon;\n\npublic class GraphicalUI{\nprivate OrderMenu orderMenu;\nprivate Scanner scanner = new Scanner(System.in);\n\npublic GraphicalUI(OrderService orderService){\n\tJFrame frame = new JFrame(\"Lemonade Administration\");\n\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\tframe.setSize(300,300);\n\n\tvar webIcon = new ImageIcon(\"src/main/resources/pictures/lemonIcon.png\");\n\tframe.setIconImage(webIcon.getImage());\n\n\tthis.orderMenu = new OrderMenu(orderService);\n\n\tJMenuBar menu = new JMenuBar();\n\n\n\tJMenu menu1 = new JMenu(\"Manager\");\n\tmenu.add(menu1);\n\tJMenuItem manager1 = new JMenuItem(\"Manager Supplier\");\n\tmanager1.setToolTipText(\"Vendors\");\n\tJMenuItem manager2 = new JMenuItem(\"Manage Products\");\n\tmanager2.setToolTipText(\"Item Inventory\");\n\tJMenuItem manager3 = new JMenuItem(\"Manage Recipes\");\n\tmanager3.setToolTipText(\"Recipe Information\");\n\tmenu1.add(manager1);\n\tmenu1.add(manager2);\n\tmenu1.add(manager3);\n\n\tJMenu menu2 = new JMenu(\"Reports\");\n\tmenu.add(menu2);\n\tJMenuItem report1 = new JMenuItem(\"Daily Sales Report\");\n\treport1.setToolTipText(\"Everything sold in Units and Dollars\");\n\tJMenuItem report2 = new JMenuItem(\"Out of Stock Report\");\n\treport2.setToolTipText(\"A list of lemonades we currently can't make\");\n\tmenu2.add(report1);\n\tmenu2.add(report2);\n\tJPanel panel = new JPanel();\n\n\n\n\tJButton button1 = new JButton(\"Create an Order\");\n\tbutton1.addActionListener((event) -> orderMenu.runOrderOption(this.scanner));\n\tbutton1.setToolTipText(\"Create a new Order\");\n\tframe.getContentPane().add(BorderLayout.NORTH, menu);\n\tframe.getContentPane().add(button1,BorderLayout.CENTER);\n\n\tframe.setVisible(true);\n}\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/mike/userinterface/GraphicalUI.java b/src/main/java/org/mike/userinterface/GraphicalUI.java
--- a/src/main/java/org/mike/userinterface/GraphicalUI.java	(revision 4bea7692c5d17288bfa8975d43f541999a03cdcf)
+++ b/src/main/java/org/mike/userinterface/GraphicalUI.java	(date 1738531437054)
@@ -1,6 +1,8 @@
 package org.mike.userinterface;
 
 import org.mike.service.OrderService;
+
+import java.util.Objects;
 import java.util.Scanner;
 import javax.swing.*;
 import java.awt.*;
@@ -15,7 +17,7 @@
 	frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
 	frame.setSize(300,300);
 
-	var webIcon = new ImageIcon("src/main/resources/pictures/lemonIcon.png");
+	var webIcon = new ImageIcon(Objects.requireNonNull(getClass().getResource("/pictures/lemonIcon.png")));
 	frame.setIconImage(webIcon.getImage());
 
 	this.orderMenu = new OrderMenu(orderService);
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"a41624f6-7755-44c2-9e2d-04576f6c3435\" name=\"Changes\" comment=\"Forking from the CLI version to begin conversion to Database from CSV and start on Graphical UI.\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/.gitignore\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/encodings.xml\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/org/mike/MainTest.java\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/org/mike/domain/SupplierTest.java\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/org/mike/repository/ProductFileRepositoryTest.java\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/org/mike/repository/SupplierFileRepositoryTest.java\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/org/mike/repository/SupplierRepositoryTest.java\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/org/mike/service/ProductServiceTest.java\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/org/mike/service/SupplierServiceTest.java\" beforeDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"Application.Main.executor\": \"Run\",\n    \"git-widget-placeholder\": \"master\"\n  }\n}]]></component>\n  <component name=\"TaskManager\">\n    <servers />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Forking from the CLI version to begin conversion to Database from CSV and start on Graphical UI.\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Forking from the CLI version to begin conversion to Database from CSV and start on Graphical UI.\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 4bea7692c5d17288bfa8975d43f541999a03cdcf)
+++ b/.idea/workspace.xml	(date 1738531437094)
@@ -5,15 +5,11 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="a41624f6-7755-44c2-9e2d-04576f6c3435" name="Changes" comment="Forking from the CLI version to begin conversion to Database from CSV and start on Graphical UI.">
-      <change beforePath="$PROJECT_DIR$/.idea/.gitignore" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/encodings.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/test/java/org/mike/MainTest.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/test/java/org/mike/domain/SupplierTest.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/test/java/org/mike/repository/ProductFileRepositoryTest.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/test/java/org/mike/repository/SupplierFileRepositoryTest.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/test/java/org/mike/repository/SupplierRepositoryTest.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/test/java/org/mike/service/ProductServiceTest.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/test/java/org/mike/service/SupplierServiceTest.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/mike/DatabaseConfig.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/mike/DatabaseConfig.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/mike/repository/ProductServer.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/mike/repository/ProductServer.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/mike/userinterface/GraphicalUI.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/mike/userinterface/GraphicalUI.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -26,10 +22,26 @@
   <component name="PropertiesComponent"><![CDATA[{
   "keyToString": {
     "Application.Main.executor": "Run",
-    "git-widget-placeholder": "master"
+    "Application.ProductServer.executor": "Run",
+    "git-widget-placeholder": "master",
+    "node.js.selected.package.tslint": "(autodetect)"
   }
 }]]></component>
+  <component name="RecentsManager">
+    <key name="MoveFile.RECENT_KEYS">
+      <recent name="$PROJECT_DIR$/src/main/resources" />
+    </key>
+  </component>
   <component name="TaskManager">
+    <task id="LOCAL-00001" summary="Forking from the CLI version to begin conversion to Database from CSV and start on Graphical UI.">
+      <option name="closed" value="true" />
+      <created>1738530552206</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1738530552206</updated>
+    </task>
+    <option name="localTasksCounter" value="2" />
     <servers />
   </component>
   <component name="VcsManagerConfiguration">
Index: src/main/java/org/mike/repository/ProductServer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.mike.repository;\n\nimport java.sql.SQLException;\n\nimport org.mike.MySQLConnection;\nimport org.mike.domain.Product;\nimport org.mike.service.SupplierService;\n\n//extends GenericRepository<Product> implements RepositoryInterface<Product>\npublic class ProductServer {\nprivate SupplierService supplierService;\n\npublic static void getAll(){\n\tString sql = \"SELECT  * /*productId, productName, productDescription, productCost, productQty, supplierID*/\" +\n\t\t\t\"FROM products\";\n\n\ttry (var conn = MySQLConnection.connect()) {\n\t\tSystem.out.println(\"Connected to MySQL\");\n\t\tassert conn != null;\n\t\ttry (var stmt  = conn.createStatement();\n\t\t     var rs    = stmt.executeQuery(sql)) {\n\n\t\t\tSystem.out.println(rs.getMetaData().getColumnName(1) + \"|\" + rs.getMetaData().getColumnName(2) + \"|\" + rs.getMetaData().getColumnName(3) + \"|\" + rs.getMetaData().getColumnName(4) + \"|\" + rs.getMetaData().getColumnName(5) + \"|\" + rs.getMetaData().getColumnName(6));\n\t\t\twhile (rs.next()) {\n\t\t\t\tSystem.out.println(\n\t\t\t\t\t\trs.getInt(1) + \" \"+\n\t\t\t\t\t\t\t\trs.getString(\"productName\")  + \" \" +\n\t\t\t\t\t\t\t\trs.getString(\"ProductDescription\") + \" \" +\n\t\t\t\t\t\t\t\trs.getDouble(\"ProductCost\")  + \" \" +\n\t\t\t\t\t\t\t\trs.getString(\"ProductQty\")  + \" \" +\n\t\t\t\t\t\t\t\trs.getString(\"supplierID\")\n\t\t\t\t);\n//\t\t\t\tint productId = rs.getInt(1);\n//\t\t\t\tString productName = rs.getString(2);\n//\t\t\t\tString productDescription = rs.getString(3);\n//\t\t\t\tdouble productCost = rs.getDouble(4);\n//\t\t\t\tint productQty = rs.getInt(5);\n//\t\t\t\tint supplierID = rs.getInt(6);\n//\t\t\t\tProduct product = new Product(productId, productName, productDescription, productCost, productQty, supplierService.findById(supplierID));\n\n\t\t\t}\n\t\t}\n\t} catch (SQLException ex) {\n\t\tSystem.out.println(ex.getMessage());\n\t}\n}\n\npublic static void main(String[] args) {\n\tgetAll();\n }\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/mike/repository/ProductServer.java b/src/main/java/org/mike/repository/ProductServer.java
--- a/src/main/java/org/mike/repository/ProductServer.java	(revision 4bea7692c5d17288bfa8975d43f541999a03cdcf)
+++ b/src/main/java/org/mike/repository/ProductServer.java	(date 1738531279220)
@@ -15,7 +15,6 @@
 			"FROM products";
 
 	try (var conn = MySQLConnection.connect()) {
-		System.out.println("Connected to MySQL");
 		assert conn != null;
 		try (var stmt  = conn.createStatement();
 		     var rs    = stmt.executeQuery(sql)) {
@@ -30,14 +29,6 @@
 								rs.getString("ProductQty")  + " " +
 								rs.getString("supplierID")
 				);
-//				int productId = rs.getInt(1);
-//				String productName = rs.getString(2);
-//				String productDescription = rs.getString(3);
-//				double productCost = rs.getDouble(4);
-//				int productQty = rs.getInt(5);
-//				int supplierID = rs.getInt(6);
-//				Product product = new Product(productId, productName, productDescription, productCost, productQty, supplierService.findById(supplierID));
-
 			}
 		}
 	} catch (SQLException ex) {
